{"version":3,"sources":["webpack:///../doc/references/route-builder.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"uRAQaA,EAAe,Q,iNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,iBADR,iBAGA,kBACE,GAAM,YADR,YAGA,uCAAsB,0BAAYC,WAAW,KAAvB,gBAAtB,wGACA,8BACE,iBAAGA,WAAW,cAAd,sDAAkF,iBAAGA,WAAW,IAC5F,KAAQ,sCADsE,QAAlF,MAIF,yGACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,iBAApB,gCACE,kBAAIA,WAAW,MACb,kBAAIA,WAAW,MAAf,sCACA,kBAAIA,WAAW,MAAf,4BAGJ,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,qBAApB,uEACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,gBAApB,gCACE,kBAAIA,WAAW,MACb,kBAAIA,WAAW,MAAf,sCACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,SAApB,mDAIN,uEAAsD,0BAAYA,WAAW,KAAvB,OAAtD,iBAAuH,0BAAYA,WAAW,KAAvB,gBAAvH,WACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,2GAOL,mCAAkB,0BAAYA,WAAW,KAAvB,cAAlB,KAA8E,0BAAYA,WAAW,KAAvB,gBAA9E,+BAAsK,0BAAYA,WAAW,KAAvB,UAAtK,KAA8N,0BAAYA,WAAW,KAAvB,WAA9N,KAAuR,0BAAYA,WAAW,KAAvB,WAAvR,QAAmV,0BAAYA,WAAW,KAAvB,cAAnV,W,+MAKJJ,EAAWK,gBAAiB","file":"component---doc-references-route-builder-md-4b0b241de8a09f2d147f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/vilicvane/projects/boring-router/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"route-builder\"\n    }}>{`Route Builder`}</h1>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`Route builder (`}<inlineCode parentName=\"p\">{`RouteBuilder`}</inlineCode>{`) is the way to create combinations of parallel routes and generate refs and hrefs in Boring Router.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Learn more about \"ref\" and \"href\" in Boring Router `}<a parentName=\"p\" {...{\n          \"href\": \"/boring-router/references/ref-href\"\n        }}>{`here`}</a>{`.`}</p>\n    </blockquote>\n    <p>{`We can get a route builder from different objects with different preset context:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`router.$(...)`}</inlineCode>{` create a route builder with:`}\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`router context and current states.`}</li>\n          <li parentName=\"ol\">{`a given building part.`}</li>\n        </ol>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`router.$scratch()`}</inlineCode>{` create a route builder with router context without current states.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`route.$(...)`}</inlineCode>{` create a route builder with:`}\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`router context and current states.`}</li>\n          <li parentName=\"ol\"><inlineCode parentName=\"li\">{`route`}</inlineCode>{` and the parameter as a given building part.`}</li>\n        </ol>\n      </li>\n    </ul>\n    <p>{`We can concatenate multiple building part with `}<inlineCode parentName=\"p\">{`$()`}</inlineCode>{` method under `}<inlineCode parentName=\"p\">{`RouteBuilder`}</inlineCode>{`, e.g.:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`router\n  .$(route, {mode: 'default'})\n  .$(overlayRoute.task.taskId, {taskId: '123'})\n  .$push();\n`}</code></pre>\n    <p>{`Similar to `}<inlineCode parentName=\"p\">{`RouteMatch`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`RouteBuilder`}</inlineCode>{` also has methods including `}<inlineCode parentName=\"p\">{`$ref()`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`$href()`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`$push()`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`$replace()`}</inlineCode>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}